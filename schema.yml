openapi: 3.0.3
info:
  title: Django Ecommerce API
  version: 1.0.0
  description: this is some Description
paths:
  /en-us/api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - en
          - fa
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /en-us/api/token/:
    post:
      operationId: api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /en-us/api/token/refresh/:
    post:
      operationId: api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /en-us/login/otp/:
    post:
      operationId: login_otp_create
      description: Handle initial login authentication and OTP generation
      tags:
      - login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginOTPRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginOTPRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginOTPRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginOTPRequest'
          description: ''
  /en-us/login/otp-resend/:
    post:
      operationId: login_otp_resend_create
      tags:
      - login
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /en-us/login/verify/:
    post:
      operationId: login_verify_create
      description: Verify OTP and issue JWT tokens
      tags:
      - login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyOTP'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyOTP'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyOTP'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyOTP'
          description: ''
  /en-us/logout/:
    post:
      operationId: logout_create
      tags:
      - logout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogOut'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LogOut'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LogOut'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogOut'
          description: ''
  /en-us/profile/:
    get:
      operationId: profile_retrieve
      tags:
      - profile
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
          description: ''
    put:
      operationId: profile_update
      tags:
      - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetail'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
          description: ''
    patch:
      operationId: profile_partial_update
      tags:
      - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserDetail'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
          description: ''
  /en-us/profile/change_password/:
    put:
      operationId: profile_change_password_update
      tags:
      - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangePassword'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePassword'
          description: ''
    patch:
      operationId: profile_change_password_partial_update
      tags:
      - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChangePassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChangePassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChangePassword'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePassword'
          description: ''
  /en-us/register/customer/:
    post:
      operationId: register_customer_create
      tags:
      - register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegister'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegister'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegister'
          description: ''
  /en-us/register/seller/:
    post:
      operationId: register_seller_create
      tags:
      - register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerRegister'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerRegister'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerRegister'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerRegister'
          description: ''
components:
  schemas:
    ChangePassword:
      type: object
      properties:
        old_password:
          type: string
        new_password:
          type: string
        new_password2:
          type: string
      required:
      - new_password
      - new_password2
      - old_password
    LogOut:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        refresh:
          type: string
        password:
          type: string
          maxLength: 128
        last_login:
          type: string
          format: date-time
          nullable: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_customer:
          type: boolean
          title: Customer status
          description: Designates whether the user is buyer or seller.
        gender:
          type: boolean
          title: Gender status
          description: Designates whether the user is man(1) or woman(0).
        phone:
          type: string
          title: Phone number
          pattern: ^(\+98|0)?9\d{9}$
          maxLength: 13
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        profile_img:
          type: string
          format: uri
          nullable: true
          title: Profile image
        otp:
          type: string
          nullable: true
          maxLength: 6
        otp_expiry_time:
          type: string
          format: date-time
          nullable: true
          title: OTP Expiry
        groups:
          type: array
          items:
            type: integer
        user_permissions:
          type: array
          items:
            type: integer
      required:
      - email
      - id
      - is_customer
      - password
      - phone
      - refresh
      - username
    LoginOTPRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    PatchedChangePassword:
      type: object
      properties:
        old_password:
          type: string
        new_password:
          type: string
        new_password2:
          type: string
    PatchedUserDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        phone:
          type: string
          title: Phone number
          pattern: ^(\+98|0)?9\d{9}$
          maxLength: 13
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        gender:
          type: boolean
          title: Gender status
          description: Designates whether the user is man(1) or woman(0).
        is_customer:
          type: boolean
          title: Customer status
          description: Designates whether the user is buyer or seller.
        profile_img:
          type: string
          format: uri
          nullable: true
          title: Profile image
        groups:
          type: array
          items:
            type: string
          readOnly: true
    SellerRegister:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        password:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
        phone:
          type: string
          title: Phone number
          pattern: ^(\+98|0)?9\d{9}$
          maxLength: 13
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        store_name:
          type: string
          writeOnly: true
          maxLength: 100
        store_address:
          type: string
          writeOnly: true
          maxLength: 250
        gender:
          type: boolean
          title: Gender status
          description: Designates whether the user is man(1) or woman(0).
      required:
      - email
      - first_name
      - gender
      - last_name
      - password
      - password2
      - phone
      - store_address
      - store_name
      - username
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    UserDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        phone:
          type: string
          title: Phone number
          pattern: ^(\+98|0)?9\d{9}$
          maxLength: 13
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        gender:
          type: boolean
          title: Gender status
          description: Designates whether the user is man(1) or woman(0).
        is_customer:
          type: boolean
          title: Customer status
          description: Designates whether the user is buyer or seller.
        profile_img:
          type: string
          format: uri
          nullable: true
          title: Profile image
        groups:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - email
      - groups
      - id
      - is_customer
      - phone
      - username
    UserRegister:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        password:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
        phone:
          type: string
          title: Phone number
          pattern: ^(\+98|0)?9\d{9}$
          maxLength: 13
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        gender:
          type: boolean
          title: Gender status
          description: Designates whether the user is man(1) or woman(0).
      required:
      - email
      - first_name
      - last_name
      - password
      - password2
      - phone
      - username
    VerifyOTP:
      type: object
      description: Serializer for OTP verification
      properties:
        email:
          type: string
          format: email
        otp:
          type: string
          writeOnly: true
          maxLength: 6
          minLength: 6
        token:
          type: string
          readOnly: true
        user_type:
          type: string
          readOnly: true
        redirect_url:
          type: string
          readOnly: true
      required:
      - email
      - otp
      - redirect_url
      - token
      - user_type
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
